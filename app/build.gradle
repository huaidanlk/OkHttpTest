apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.example.okhttptest"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

configurations {
    // all*.exclude group: 'com.google.android', module: 'support-v4'
//    all*.exclude module: 'support-v4'
    //或者粗暴点，就没有上面的坑了  all*.exclude module: 'support-v4'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude group: 'androidx.arch.core'
//    })
//    implementation 'com.android.support:appcompat-v7:25.3.1'

    implementation('androidx.appcompat:appcompat:1.3.1')
    implementation 'com.google.android.material:material:1.2.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:27.1.1'

    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //Gson converter
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    //RxJava2 Adapter
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    implementation project(':apt-annotation')
    implementation project(':apt-library')
    annotationProcessor project(':apt-processor')
}
repositories {
    mavenCentral()
}

//task hello {
//    doLast {
//        println 'Hello World'
//    }
//}

//def Task hello1 = task(hello1)
//hello1.doLast {
//    println("Hello1 World")
//}

//def Task hello2 =task(hello2,group: BasePlugin.BUILD_GROUP)
//hello2.doLast {
//    println("Hello2 World")
//}

//tasks.create(name : 'hello3'){
//    println("Hello3 World")
//}

//task hello {
//    println("dependsOn : hello")
//}
//task go(dependsOn: hello) {
//    println(" go for it")
//}

//3.times {number ->
//    task "task$number" {
//        println("task $number")
//    }
//}

//task hello {
//    group = 'build'
//    description = 'hello world1111'
//
////    doLast {
//        println("任务分组: ${group}")
//        println("任务描述: ${description}")
////    }
//}
//
//task go(){ //dependsOn: hello
//    println("go for it")
//}

//变量
//def a = 1
//def int b = 1
//def c = "hello world"


//方法
//task method {
//    add(1,2)
////    minus (1,2)
//    def number = minus (2,3)
//    println(number)
//}
//
//def add(int a, int b){
//    println a+b
//}
//
//int minus(a,b){
//    a-b
//}

//类
//task classObj {
//    def p = new Person()
//    p.increaseAge(5)
//    println(p.age)
//}
//
//class Person{
//    String name
//    Integer age = 10
//    def increaseAge(Integer years){
//        this.age +=years
//    }
//}

//断言
//task method {
//    assert 1+2 == 6
//}

// for 循环


//io
def filePath = "/Users/lk/Documents/Study/name.txt"
def file = new File(filePath)
file.eachLine {
    println(it)
}
file.withPrintWriter {
    it.println("三上")
    it.println("\n")
    it.println("有鸭1111")
}
